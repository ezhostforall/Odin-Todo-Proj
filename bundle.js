(()=>{"use strict";var n={51:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,'/* Task Filters */\n.task-filters {\n  display: flex;\n  gap: var(--spacing-lg);\n  align-items: center;\n  margin-bottom: var(--spacing-lg);\n  padding: var(--spacing-md);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px solid var(--border-color);\n}\n\n.filter-group {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n}\n\n.filter-group label {\n  font-weight: 500;\n  color: var(--text-color);\n  font-size: var(--font-size-sm);\n  white-space: nowrap;\n}\n\n.filter-group select {\n  padding: var(--spacing-xs) var(--spacing-sm);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-sm);\n  background-color: var(--bg-color);\n  cursor: pointer;\n}\n\n.filter-group select:focus {\n  outline: none;\n  border-color: var(--primary-color);\n}\n\n@media (max-width: 600px) {\n  .task-filters {\n    flex-direction: column;\n    gap: var(--spacing-md);\n    align-items: stretch;\n  }\n  \n  .filter-group {\n    justify-content: space-between;\n  }\n}\n\n/* Task List */\n.task-list {\n  margin-top: var(--spacing-lg);\n}\n\n.task-section {\n  margin-bottom: var(--spacing-xl);\n}\n\n.task-section h3 {\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-color);\n  font-size: var(--font-size-lg);\n}\n\n.tasks {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.task-item {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-md);\n  padding: var(--spacing-md);\n  background-color: var(--bg-color);\n  border: 1px solid var(--border-light);\n  border-radius: var(--border-radius);\n  transition: all 0.2s ease;\n}\n\n.task-item:hover {\n  border-color: var(--primary-color);\n  box-shadow: 0 2px 4px rgba(0, 123, 255, 0.1);\n}\n\n.task-item.completed {\n  opacity: 0.7;\n  background-color: var(--bg-light);\n}\n\n.task-item.completed .task-title {\n  text-decoration: line-through;\n  color: var(--text-muted);\n}\n\n.task-checkbox {\n  flex-shrink: 0;\n}\n\n.task-checkbox input[type="checkbox"] {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n}\n\n.task-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.task-title {\n  margin: 0 0 var(--spacing-xs) 0;\n  font-size: var(--font-size-base);\n  font-weight: 500;\n  color: var(--text-color);\n}\n\n.task-meta {\n  display: flex;\n  gap: var(--spacing-md);\n  align-items: center;\n  margin-bottom: var(--spacing-xs);\n}\n\n.task-due {\n  font-size: var(--font-size-sm);\n  color: var(--text-muted);\n}\n\n.task-priority {\n  font-size: var(--font-size-sm);\n  padding: 2px var(--spacing-xs);\n  border-radius: var(--border-radius);\n  font-weight: 500;\n  text-transform: capitalize;\n}\n\n.priority-low {\n  background-color: #d4edda;\n  color: #155724;\n}\n\n.priority-normal {\n  background-color: #fff3cd;\n  color: #856404;\n}\n\n.priority-high {\n  background-color: #f8d7da;\n  color: #721c24;\n}\n\n.task-notes {\n  margin-top: var(--spacing-xs);\n}\n\n.task-notes p {\n  margin: 0;\n  font-size: var(--font-size-sm);\n  color: var(--text-muted);\n  font-style: italic;\n}\n\n.task-actions {\n  display: flex;\n  gap: var(--spacing-xs);\n  flex-shrink: 0;\n}\n\n.empty-state {\n  text-align: center;\n  padding: var(--spacing-xl);\n  color: var(--text-muted);\n}\n\n.empty-state p {\n  margin: 0;\n  font-size: var(--font-size-lg);\n}\n',""]);const i=s},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},s=[],i=0;i<n.length;i++){var d=n[i],c=r.base?d[0]+r.base:d[0],l=o[c]||0,p="".concat(c," ").concat(l);o[c]=l+1;var u=t(p),g={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(g);else{var m=a(g,r);r.byIndex=i,e.splice(i,0,{identifier:p,updater:m,references:1})}s.push(p)}return s}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var i=t(o[s]);e[i].references--}for(var d=r(n,a),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=d}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},249:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nhtml {\n  font-size: 16px;\n  scroll-behavior: smooth;\n  font-family: Arial, sans-serif;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nmain {\n  padding: 20px;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  padding: 0;\n  font-weight: bold;\n}\n\nh1 {\n  font-size: 2em;\n  margin-bottom: 0.5em;\n}\n\nh2 {\n  font-size: 1.75em;\n  margin-bottom: 0.5em;\n}\n\nh3 {\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n}\n\nh4 {\n  font-size: 1.25em;\n  margin-bottom: 0.5em;\n}\n\nh5 {\n  font-size: 1.125em;\n  margin-bottom: 0.5em;\n}\n\nh6 {\n  font-size: 1em;\n  margin-bottom: 0.5em;\n}\n\np {\n  margin-bottom: 1em;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.logoWrap {\n  display: flex;\n  align-items: center;\n  width: 150px;\n}\n\n.logoWrap img {\n  max-width: 100%;\n  height: auto;\n}\n\nnav ul {\n  display: flex;\n  gap: 15px;\n}\n\n.btn {\n  padding: 10px 15px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn:hover {\n  background-color: #0056b3;\n}\n\n.dashboard-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n  gap: 15px;\n}\n\n.project {\n  display: flex;\n  flex-direction: column;\n  gap: 2em;\n  align-items: center;\n  border: 1px solid #dee2e6;\n  border-radius: 5px;\n  padding: 15px;\n  margin-bottom: 15px;\n  background-color: #f8f9fa;\n}\n\n.project ul {\n  width: 100%;\n  padding: 0;\n}\n\n.task-item {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.task-item h3 {\n  font-size: 1.25em;\n}\n\n.task-item p {\n  font-size: 0.875em;\n  color: #6c757d;\n}",""]);const i=s},275:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,".dashboard-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-xl);\n}\n\n.dashboard-header h1 {\n  margin: 0;\n  color: var(--text-color);\n}\n\n.dashboard-header .btn {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n}\n\n.btn-icon {\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.dashboard-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.project {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  background-color: #f9f9f9;\n}\n\n.project h2 {\n  margin: 0 0 10px 0;\n  color: #333;\n}\n\n.project p {\n  margin: 0 0 15px 0;\n  color: #666;\n}\n\n.task-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin: 5px 0;\n  background-color: white;\n  border-radius: 4px;\n  border: 1px solid #eee;\n}\n\n.task-item h3 {\n  margin: 0 0 5px 0;\n  font-size: 14px;\n  color: #333;\n}\n\n.task-item p {\n  margin: 0;\n  font-size: 12px;\n  color: #888;\n}\n\n.project-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\n.select-project-btn {\n  background-color: #007bff;\n  color: white;\n}\n\n.select-project-btn:hover {\n  background-color: #0056b3;\n}\n\n.delete-project-btn {\n  background-color: #dc3545;\n  color: white;\n}\n\n.delete-project-btn:hover {\n  background-color: #c82333;\n}\n\n.view-task-btn {\n  background-color: #28a745;\n  color: white;\n  font-size: 12px;\n  padding: 4px 8px;\n}\n\n.view-task-btn:hover {\n  background-color: #1e7e34;\n}\n",""]);const i=s},293:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,".modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: var(--bg-color);\n  border-radius: var(--border-radius-lg);\n  padding: 0;\n  max-width: 500px;\n  width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-lg);\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: var(--text-color);\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: var(--text-muted);\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n}\n\n.modal-close:hover {\n  background-color: var(--border-color);\n  color: var(--text-color);\n}\n\n.modal-content form {\n  padding: var(--spacing-lg);\n}\n\n.form-group {\n  margin-bottom: var(--spacing-lg);\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: var(--spacing-xs);\n  font-weight: 500;\n  color: var(--text-color);\n  font-size: var(--font-size-base);\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: var(--spacing-md);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-base);\n  background-color: var(--bg-color);\n  transition: border-color 0.2s ease;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.modal-actions {\n  display: flex;\n  gap: var(--spacing-md);\n  justify-content: flex-end;\n  margin-top: var(--spacing-xl);\n  padding-top: var(--spacing-lg);\n  border-top: 1px solid var(--border-light);\n}\n\n.floating-success-message {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #d4edda;\n  color: #155724;\n  padding: var(--spacing-md) var(--spacing-lg);\n  border-radius: var(--border-radius);\n  border: 1px solid #c3e6cb;\n  z-index: 1001;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n",""]);const i=s},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t}).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},395:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,".add-task-form {\n  background-color: var(--bg-light);\n  padding: var(--spacing-lg);\n  border-radius: var(--border-radius-lg);\n  border: 1px solid var(--border-color);\n  margin-bottom: var(--spacing-xl);\n}\n\n.form-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n}\n\n@media (max-width: 768px) {\n  .form-row {\n    grid-template-columns: 1fr;\n  }\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group label {\n  margin-bottom: var(--spacing-xs);\n  font-weight: 500;\n  color: var(--text-color);\n  font-size: var(--font-size-sm);\n}\n\n.form-group input,\n.form-group select {\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-base);\n  background-color: var(--bg-color);\n  transition: border-color 0.2s ease;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.form-group input::placeholder {\n  color: var(--text-light);\n}\n\n.form-actions {\n  display: flex;\n  gap: var(--spacing-sm);\n  justify-content: flex-start;\n}\n\n.success-message {\n  background-color: #d4edda;\n  color: #155724;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--border-radius);\n  margin-top: var(--spacing-md);\n  font-size: var(--font-size-sm);\n  border: 1px solid #c3e6cb;\n}\n",""]);const i=s},499:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,".header {\n  display: flex;\n  max-width: 1200px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 20px;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n  margin: 0 auto;\n}\n\n.logoWrap {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.logoWrap img {\n  height: 40px;\n  width: auto;\n}\n\n.app-title {\n  font-size: 18px;\n  font-weight: 600;\n  color: #333;\n}\n\nnav ul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  gap: 20px;\n}\n\nnav li a {\n  text-decoration: none;\n  color: #333;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: 4px;\n  transition: all 0.2s ease;\n}\n\nnav li a:hover {\n  color: #007bff;\n  background-color: #e9ecef;\n}\n",""]);const i=s},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},601:n=>{n.exports=function(n){return n[1]}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},745:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,".add-project-form {\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: var(--bg-light);\n  padding: var(--spacing-xl);\n  border-radius: var(--border-radius-lg);\n  border: 1px solid var(--border-color);\n}\n\n.add-project-form h2 {\n  margin: 0 0 var(--spacing-lg) 0;\n  color: var(--text-color);\n  text-align: center;\n}\n\n.form-group {\n  margin-bottom: var(--spacing-lg);\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: var(--spacing-xs);\n  font-weight: 500;\n  color: var(--text-color);\n  font-size: var(--font-size-base);\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: var(--spacing-md);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-base);\n  background-color: var(--bg-color);\n  transition: border-color 0.2s ease;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.form-group input::placeholder,\n.form-group textarea::placeholder {\n  color: var(--text-light);\n}\n\n.form-actions {\n  display: flex;\n  gap: var(--spacing-md);\n  justify-content: center;\n  margin-top: var(--spacing-xl);\n}\n\n.success-message {\n  background-color: #d4edda;\n  color: #155724;\n  padding: var(--spacing-md);\n  border-radius: var(--border-radius);\n  margin-top: var(--spacing-lg);\n  font-size: var(--font-size-base);\n  border: 1px solid #c3e6cb;\n  text-align: center;\n}\n",""]);const i=s},754:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,"/* Global button styles */\n.btn {\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: none;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: var(--font-size-base);\n  transition: all 0.2s ease;\n  text-decoration: none;\n  display: inline-block;\n  text-align: center;\n}\n\n.btn:hover {\n  transform: translateY(-1px);\n}\n\n.btn-primary {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.btn-primary:hover {\n  background-color: var(--primary-hover);\n}\n\n.btn-secondary {\n  background-color: #6c757d;\n  color: white;\n}\n\n.btn-secondary:hover {\n  background-color: #5a6268;\n}\n\n.btn-success {\n  background-color: var(--success-color);\n  color: white;\n}\n\n.btn-success:hover {\n  background-color: var(--success-hover);\n}\n\n.btn-danger {\n  background-color: var(--danger-color);\n  color: white;\n}\n\n.btn-danger:hover {\n  background-color: var(--danger-hover);\n}\n\n.btn-sm {\n  padding: var(--spacing-xs) var(--spacing-sm);\n  font-size: var(--font-size-sm);\n}\n\n/* Clear button specific styles */\n.clear-all-btn {\n  background-color: var(--danger-color);\n  color: white;\n  margin-top: var(--spacing-lg);\n}\n\n.clear-all-btn:hover {\n  background-color: var(--danger-hover);\n}\n\n/* Container */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: var(--spacing-lg);\n}\n\n/* Project view styles */\n.project-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: var(--spacing-xl);\n  padding: var(--spacing-lg);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius-lg);\n  border: 1px solid var(--border-color);\n}\n\n.project-info h1 {\n  margin: 0 0 var(--spacing-sm) 0;\n  color: var(--text-color);\n}\n\n.project-description {\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-muted);\n  font-size: var(--font-size-lg);\n}\n\n.project-stats {\n  display: flex;\n  gap: var(--spacing-lg);\n}\n\n.stat {\n  font-size: var(--font-size-sm);\n  color: var(--text-muted);\n}\n\n.stat strong {\n  color: var(--primary-color);\n  font-size: var(--font-size-base);\n}\n\n.project-actions {\n  display: flex;\n  gap: var(--spacing-sm);\n  flex-shrink: 0;\n}\n\n.project-content {\n  display: grid;\n  gap: var(--spacing-xl);\n}\n\n.add-task-section h2,\n.tasks-section h2 {\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-color);\n}\n\n.project-not-found {\n  text-align: center;\n  padding: var(--spacing-xl);\n}\n\n.dashboard-actions {\n  text-align: center;\n  margin-top: var(--spacing-xl);\n}\n\n/* Grid system */\n.grid {\n  display: grid;\n  gap: var(--spacing-lg);\n}\n\n.grid-auto-fit {\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n}\n\n/* Card component */\n.card {\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius-lg);\n  padding: var(--spacing-lg);\n  background-color: var(--bg-grey);\n}\n\n.card-header {\n  margin-bottom: var(--spacing-md);\n}\n\n.card-title {\n  margin: 0 0 var(--spacing-sm) 0;\n  color: var(--text-color);\n}\n\n.card-description {\n  margin: 0 0 var(--spacing-md) 0;\n  color: var(--text-muted);\n}\n\n.card-actions {\n  display: flex;\n  gap: var(--spacing-sm);\n  margin-top: var(--spacing-md);\n}\n\n/* List components */\n.list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.list-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-sm);\n  margin: var(--spacing-xs) 0;\n  background-color: var(--bg-color);\n  border-radius: var(--border-radius);\n  border: 1px solid var(--border-light);\n}\n\n.list-item-content h3 {\n  margin: 0 0 var(--spacing-xs) 0;\n  font-size: var(--font-size-base);\n  color: var(--text-color);\n}\n\n.list-item-content p {\n  margin: 0;\n  font-size: var(--font-size-sm);\n  color: var(--text-light);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .project-header {\n    flex-direction: column;\n    gap: var(--spacing-md);\n  }\n  \n  .project-actions {\n    align-self: stretch;\n  }\n  \n  .project-stats {\n    flex-direction: column;\n    gap: var(--spacing-xs);\n  }\n}\n",""]);const i=s},759:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,":root {\n  --primary-color: #007bff;\n  --primary-hover: #0056b3;\n  --success-color: #28a745;\n  --success-hover: #1e7e34;\n  --danger-color: #dc3545;\n  --danger-hover: #c82333;\n  --warning-color: #ffc107;\n  --warning-hover: #e0a800;\n  \n  --text-color: #333;\n  --text-muted: #666;\n  --text-light: #888;\n  \n  --bg-color: #ffffff;\n  --bg-light: #f8f9fa;\n  --bg-grey: #f9f9f9;\n  \n  --border-color: #dee2e6;\n  --border-light: #eee;\n  --border-dark: #ddd;\n  \n  --border-radius: 4px;\n  --border-radius-lg: 8px;\n  \n  --spacing-xs: 4px;\n  --spacing-sm: 8px;\n  --spacing-md: 16px;\n  --spacing-lg: 20px;\n  --spacing-xl: 24px;\n  \n  --font-size-sm: 12px;\n  --font-size-base: 14px;\n  --font-size-lg: 16px;\n  --font-size-xl: 18px;\n}\n",""]);const i=s},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},935:(n,e,t)=>{t.d(e,{A:()=>i});var r=t(601),a=t.n(r),o=t(314),s=t.n(o)()(a());s.push([n.id,'.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: var(--bg-color);\n  border-radius: var(--border-radius-lg);\n  padding: 0;\n  max-width: 600px;\n  width: 90%;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--spacing-lg);\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: var(--text-color);\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: var(--text-muted);\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n}\n\n.modal-close:hover {\n  background-color: var(--border-color);\n  color: var(--text-color);\n}\n\n.modal-content form {\n  padding: var(--spacing-lg);\n}\n\n.form-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n}\n\n@media (max-width: 600px) {\n  .form-row {\n    grid-template-columns: 1fr;\n  }\n  \n  .modal-content {\n    width: 95%;\n    margin: var(--spacing-md);\n  }\n}\n\n.form-group {\n  margin-bottom: var(--spacing-md);\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: var(--spacing-xs);\n  font-weight: 500;\n  color: var(--text-color);\n  font-size: var(--font-size-sm);\n}\n\n.form-group input,\n.form-group select,\n.form-group textarea {\n  width: 100%;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border: 1px solid var(--border-color);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-base);\n  background-color: var(--bg-color);\n  transition: border-color 0.2s ease;\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group select:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: var(--primary-color);\n  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);\n}\n\n.form-group textarea {\n  resize: vertical;\n  min-height: 80px;\n}\n\n.form-group label input[type="checkbox"] {\n  width: auto;\n  margin-right: var(--spacing-xs);\n}\n\n.modal-actions {\n  display: flex;\n  gap: var(--spacing-md);\n  justify-content: flex-end;\n  margin-top: var(--spacing-xl);\n  padding-top: var(--spacing-lg);\n  border-top: 1px solid var(--border-light);\n}\n\n.floating-success-message {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background-color: #d4edda;\n  color: #155724;\n  padding: var(--spacing-md) var(--spacing-lg);\n  border-radius: var(--border-radius);\n  border: 1px solid #c3e6cb;\n  z-index: 1001;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n',""]);const i=s}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var r=t(72),a=t.n(r),o=t(825),s=t.n(o),i=t(659),d=t.n(i),c=t(56),l=t.n(c),p=t(540),u=t.n(p),g=t(113),m=t.n(g),h=t(249),v={};v.styleTagTransform=m(),v.setAttributes=l(),v.insert=d().bind(null,"head"),v.domAPI=s(),v.insertStyleElement=u(),a()(h.A,v),h.A&&h.A.locals&&h.A.locals;var b=t(759),f={};f.styleTagTransform=m(),f.setAttributes=l(),f.insert=d().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=u(),a()(b.A,f),b.A&&b.A.locals&&b.A.locals;var k=t(754),x={};x.styleTagTransform=m(),x.setAttributes=l(),x.insert=d().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=u(),a()(k.A,x),k.A&&k.A.locals&&k.A.locals;const y="odin-tasks-app";class j{saveProjects(n){try{localStorage.setItem(y,JSON.stringify(n))}catch(n){throw console.error("Failed to save projects:",n),new Error("Storage save failed")}}loadProjects(){try{const n=localStorage.getItem(y);return n?JSON.parse(n):[]}catch(n){return console.error("Failed to load projects:",n),[]}}clearProjects(){try{localStorage.removeItem(y)}catch(n){console.error("Failed to clear projects:",n)}}}function w(n){return n?n instanceof Date&&!isNaN(n.getTime())?`${String(n.getDate()).padStart(2,"0")}/${String(n.getMonth()+1).padStart(2,"0")}/${n.getFullYear()}`:"Invalid date":"No due date"}class S{constructor({id:n=`task-${crypto.randomUUID()}`,title:e,due:t=null,notes:r=[],done:a=!1,priority:o="normal"}){if(!e)throw new Error("Title is required");this.id=n,this.title=e,this.due="string"==typeof t&&t.trim()?function(n){if(!n||"string"!=typeof n)return null;const[e,t,r]=n.split("-").map(Number),a=new Date(e,t-1,r);if(isNaN(a.getTime()))throw new Error("Invalid date format");return a}(t):null,this.notes=Array.isArray(r)?r:[],this.done=Boolean(a),this.priority=o}formatTask(){return{id:this.id,title:this.title,due:w(this.due),notes:this.notes,done:this.done,priority:this.priority}}toggleDone(){this.done=!this.done}addNote(n){this.notes.push(n)}removeNote(n){this.notes=this.notes.filter(e=>e!==n)}toJSON(){return{id:this.id,title:this.title,due:this.due instanceof Date&&!isNaN(this.due.getTime())?this.due.toISOString().slice(0,10):null,notes:this.notes,done:this.done,priority:this.priority}}}class T{constructor({id:n=`project-${crypto.randomUUID()}`,name:e,description:t,tasks:r=[]}){if(!e)throw new Error("Name is required");this.id=n,this.name=e,this.description=t||"No description provided",this.tasks=Array.isArray(r)&&r.every(n=>n instanceof S)?r:[]}addTask(n){if(!(n instanceof S))throw new Error("Invalid task");this.tasks.push(n)}removeTask(n){this.tasks=this.tasks.filter(e=>e.id!==n)}toJSON(){return{id:this.id,name:this.name,description:this.description,tasks:this.tasks.map(n=>n.toJSON())}}}class E{constructor(){this.storageService=new j}loadProjects(){return this.storageService.loadProjects().map(n=>new T({...n,tasks:(n.tasks||[]).map(n=>{return new S({...n,due:(e=n.due,e?"string"==typeof e?e:e instanceof Date&&!isNaN(e.getTime())?e.toISOString().slice(0,10):null:null)});var e})}))}saveProjects(n){this.storageService.saveProjects(n.map(n=>n.toJSON()))}validateProject(n){if(!(n instanceof T))throw new Error("Invalid project instance")}clearStorage(){this.storageService.clearProjects()}}class P{validateTask(n){if(!(n instanceof S))throw new Error("Invalid task instance")}formatTaskForDisplay(n){return{...n.toJSON(),formattedDue:n.due?n.due.toLocaleDateString():"No due date"}}}class A{constructor(){this.projects=[],this.selectedProjectId=null,this.projectService=new E,this.taskService=new P,this.taskFilter="all",this.taskSort="created"}initialize(){this.projects=this.projectService.loadProjects(),0===this.projects.length?this.createDefaultProject():this.selectedProjectId||(this.selectedProjectId=this.projects[0].id)}createDefaultProject(){const n=new T({name:"Default Project",description:"Your first project"}),e=new S({title:"Sample Task",due:"2025-12-31"});this.addProject(n),this.addTaskToProject(n.id,e),this.selectProject(n.id)}getProjects(){return this.projects}getSelectedProject(){return this.projects.find(n=>n.id===this.selectedProjectId)}addProject(n){this.projectService.validateProject(n),this.projects.push(n),this.projectService.saveProjects(this.projects)}removeProject(n){this.projects=this.projects.filter(e=>e.id!==n),this.projectService.saveProjects(this.projects),this.selectedProjectId===n&&(this.selectedProjectId=this.projects.length>0?this.projects[0].id:null)}selectProject(n){this.selectedProjectId=n}addTaskToProject(n,e){const t=this.projects.find(e=>e.id===n);if(!t)throw new Error("Project not found");this.taskService.validateTask(e),t.addTask(e),this.projectService.saveProjects(this.projects)}removeTaskFromProject(n,e){const t=this.projects.find(e=>e.id===n);if(!t)throw new Error("Project not found");t.removeTask(e),this.projectService.saveProjects(this.projects)}clearAllProjects(){this.projects=[],this.selectedProjectId=null,this.projectService.clearStorage(),this.initialize()}getTaskFilter(){return this.taskFilter}setTaskFilter(n){this.taskFilter=n}getTaskSort(){return this.taskSort}setTaskSort(n){this.taskSort=n}}var z=t(499),$={};$.styleTagTransform=m(),$.setAttributes=l(),$.insert=d().bind(null,"head"),$.domAPI=s(),$.insertStyleElement=u(),a()(z.A,$),z.A&&z.A.locals&&z.A.locals;class L{constructor(n){this.navigate=n}render(){return'\n      <header class=\'header\'>\n        <div class=\'logoWrap\'>\n          <span class="app-title">Task Manager</span>\n        </div>\n        <nav>\n          <ul>\n            <li><a id="nav-dashboard" class="nav-link">Dashboard</a></li>\n            <li><a id="nav-add-project" class="nav-link">Add Project</a></li>\n          </ul>\n        </nav>\n      </header>\n    '}attachEventListeners(){const n=document.getElementById("nav-dashboard"),e=document.getElementById("nav-add-project");n&&this.navigate&&n.addEventListener("click",n=>{n.preventDefault(),this.navigate("dashboard")}),e&&e.addEventListener("click",n=>{n.preventDefault(),this.navigate&&this.navigate("add-project")})}}var I=t(275),N={};N.styleTagTransform=m(),N.setAttributes=l(),N.insert=d().bind(null,"head"),N.domAPI=s(),N.insertStyleElement=u(),a()(I.A,N),I.A&&I.A.locals&&I.A.locals;class D{constructor(n,e,t){this.appState=n,this.rerender=e,this.navigate=t}render(){return`\n      <div class="dashboard-header">\n        <h1>Dashboard</h1>\n        <button class="btn btn-primary" id="add-project-btn">\n          <span class="btn-icon">+</span>\n          Add Project\n        </button>\n      </div>\n      <div class="grid grid-auto-fit">\n        ${this.appState.getProjects().map(n=>n.toJSON()).map(n=>`\n          <div class="card" data-project-id="${n.id}">\n            <div class="card-header">\n              <h2 class="card-title">${n.name}</h2>\n              <p class="card-description">${n.description}</p>\n            </div>\n            <ul class="list">\n              ${n.tasks.map(n=>`\n                <li class='list-item' data-task-id="${n.id}">\n                  <div class="list-item-content">\n                    <h3>${n.title}</h3> \n                    <p>Due: ${n.due?w(new Date(n.due)):"No due date"}</p>\n                  </div>\n                  <button class='btn btn-success btn-sm' data-task-id="${n.id}">View</button>\n                </li>\n              `).join("")}\n            </ul>\n            <div class='card-actions'>\n              <button class='btn btn-primary' data-project-id="${n.id}">View Project</button>\n              <button class='btn btn-danger' data-project-id="${n.id}">Delete Project</button>\n            </div>\n          </div>\n        `).join("")}\n      </div>\n    `}attachEventListeners(){const n=document.getElementById("add-project-btn");n&&n.addEventListener("click",()=>{this.navigate&&this.navigate("add-project")}),document.querySelectorAll(".btn-primary").forEach(n=>{const e=n.getAttribute("data-project-id");e&&n.addEventListener("click",n=>{this.appState.selectProject(e),console.log(`Navigating to project: ${e}`),this.navigate&&this.navigate("project")})}),document.querySelectorAll(".btn-danger").forEach(n=>{const e=n.getAttribute("data-project-id");e&&n.addEventListener("click",n=>{confirm("Are you sure you want to delete this project?")&&(this.appState.removeProject(e),this.rerender&&this.rerender())})}),document.querySelectorAll(".btn-success").forEach(n=>{const e=n.getAttribute("data-task-id");e&&n.addEventListener("click",n=>{const t=this.appState.getProjects().find(n=>n.tasks.some(n=>n.id===e));t&&(this.appState.selectProject(t.id),this.navigate("project"))})})}}class C{constructor(n,e,t){this.appState=n,this.rerender=e,this.navigate=t,this.header=new L(t),this.dashboard=new D(n,e,t)}render(){return this.appState.getSelectedProject(),`\n      ${this.header.render()}\n      <main class="container">\n        ${this.dashboard.render()}\n        <div class="dashboard-actions">\n          <button class='btn clear-all-btn' id="clear-projects">Clear All Projects</button>\n        </div>\n      </main>\n    `}attachEventListeners(){this.header.attachEventListeners(),this.dashboard.attachEventListeners(),this.attachClearProjectsListener()}attachClearProjectsListener(){const n=document.getElementById("clear-projects");n&&n.addEventListener("click",()=>{confirm("Are you sure you want to clear all projects?")&&(this.appState.clearAllProjects(),this.rerender())})}}var F=t(935),M={};M.styleTagTransform=m(),M.setAttributes=l(),M.insert=d().bind(null,"head"),M.domAPI=s(),M.insertStyleElement=u(),a()(F.A,M),F.A&&F.A.locals&&F.A.locals;class B{constructor(n,e){this.appState=n,this.rerender=e,this.currentTask=null}show(n){n&&(this.currentTask=n,this.render(),this.attachEventListeners())}hide(){const n=document.getElementById("edit-task-modal");n&&n.remove()}close(){this.hide()}render(){this.hide();const n=this.currentTask.toJSON().due||"",e=`\n      <div id="edit-task-modal" class="modal-overlay">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h2>Edit Task</h2>\n            <button class="modal-close" id="close-edit-modal">&times;</button>\n          </div>\n          \n          <form id="edit-task-form">\n            <div class="form-group">\n              <label for="edit-task-title">Task Title*</label>\n              <input type="text" id="edit-task-title" name="title" required value="${this.currentTask.title}">\n            </div>\n            \n            <div class="form-row">\n              <div class="form-group">\n                <label for="edit-task-due">Due Date</label>\n                <input type="date" id="edit-task-due" name="due" value="${n}">\n              </div>\n              <div class="form-group">\n                <label for="edit-task-priority">Priority</label>\n                <select id="edit-task-priority" name="priority">\n                  <option value="low" ${"low"===this.currentTask.priority?"selected":""}>Low</option>\n                  <option value="normal" ${"normal"===this.currentTask.priority?"selected":""}>Normal</option>\n                  <option value="high" ${"high"===this.currentTask.priority?"selected":""}>High</option>\n                </select>\n              </div>\n            </div>\n            \n            <div class="form-group">\n              <label for="edit-task-notes">Notes</label>\n              <textarea id="edit-task-notes" name="notes" rows="3" placeholder="Add notes">${this.currentTask.notes.join("\n")}</textarea>\n            </div>\n            \n            <div class="form-group">\n              <label>\n                <input type="checkbox" id="edit-task-done" name="done" ${this.currentTask.done?"checked":""}>\n                Mark as completed\n              </label>\n            </div>\n\n            <div class="modal-actions">\n              <button type="submit" class="btn btn-primary">Save Changes</button>\n              <button type="button" class="btn btn-secondary" id="cancel-edit">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    `;document.body.insertAdjacentHTML("beforeend",e)}attachEventListeners(){const n=document.getElementById("edit-task-modal"),e=document.getElementById("edit-task-form"),t=document.getElementById("close-edit-modal"),r=document.getElementById("cancel-edit");n&&n.addEventListener("click",e=>{e.target===n&&this.hide()}),t&&t.addEventListener("click",()=>this.hide()),r&&r.addEventListener("click",()=>this.hide()),e&&e.addEventListener("submit",n=>{n.preventDefault(),this.handleSubmit(n)}),document.addEventListener("keydown",n=>{"Escape"===n.key&&this.hide()})}handleSubmit(n){const e=new FormData(n.target),t=e.get("notes").trim();try{this.currentTask.title=e.get("title").trim(),this.currentTask.priority=e.get("priority"),this.currentTask.done=e.has("done");const n=e.get("due");this.currentTask.due=n?new Date(n):null,this.currentTask.notes=t?t.split("\n").filter(n=>n.trim()):[],this.appState.projectService.saveProjects(this.appState.getProjects()),this.hide(),this.rerender(),this.showSuccessMessage("Task updated successfully!")}catch(n){console.error("Error updating task:",n),alert("Error updating task: "+n.message)}}showSuccessMessage(n){const e=document.createElement("div");e.className="floating-success-message",e.textContent=n,document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},3e3)}}var O=t(51),q={};q.styleTagTransform=m(),q.setAttributes=l(),q.insert=d().bind(null,"head"),q.domAPI=s(),q.insertStyleElement=u(),a()(O.A,q),O.A&&O.A.locals&&O.A.locals;class J{constructor(n,e){this.appState=n,this.rerender=e,this.editTaskModal=null}render(){const n=this.appState.getSelectedProject();return n?0===n.tasks.length?'\n        <div class="empty-state">\n          <p>No tasks yet. Add your first task above!</p>\n        </div>\n      ':`\n      ${this.renderFilters()}\n      ${this.renderTasksContent()}\n    `:'\n        <div class="empty-state">\n          <p>No project selected.</p>\n        </div>\n      '}renderFilters(){const n=this.appState.getTaskFilter(),e=this.appState.getTaskSort();return`\n      <div class="task-filters">\n        <div class="filter-group">\n          <label for="task-filter">Filter:</label>\n          <select id="task-filter" name="filter">\n            <option value="all" ${"all"===n?"selected":""}>All Tasks</option>\n            <option value="pending" ${"pending"===n?"selected":""}>Pending</option>\n            <option value="completed" ${"completed"===n?"selected":""}>Completed</option>\n            <option value="overdue" ${"overdue"===n?"selected":""}>Overdue</option>\n          </select>\n        </div>\n        \n        <div class="filter-group">\n          <label for="task-sort">Sort by:</label>\n          <select id="task-sort" name="sort">\n            <option value="created" ${"created"===e?"selected":""}>Date Created</option>\n            <option value="due" ${"due"===e?"selected":""}>Due Date</option>\n            <option value="priority" ${"priority"===e?"selected":""}>Priority</option>\n            <option value="title" ${"title"===e?"selected":""}>Title</option>\n          </select>\n        </div>\n      </div>\n    `}renderTasksContent(){const n=this.appState.getSelectedProject();if(!n)return"";const e=this.filterTasks(n.tasks),t=this.appState.getTaskFilter();return`\n      <div class="task-list">\n        ${"all"===t?this.renderGroupedTasks(e):this.renderFilteredTasks(e,t)}\n      </div>\n    `}filterTasks(n){let e=[...n];const t=new Date;switch(this.appState.getTaskFilter()){case"pending":e=e.filter(n=>!n.done);break;case"completed":e=e.filter(n=>n.done);break;case"overdue":e=e.filter(n=>!n.done&&n.due&&new Date(n.due)<t)}return this.sortTasks(e)}sortTasks(n){const e={high:3,normal:2,low:1},t=this.appState.getTaskSort();return n.sort((n,r)=>{switch(t){case"due":return n.due||r.due?n.due?r.due?new Date(n.due)-new Date(r.due):-1:1:0;case"priority":return e[r.priority]-e[n.priority];case"title":return n.title.localeCompare(r.title);default:return n.id.localeCompare(r.id)}})}renderGroupedTasks(n){const e=n.filter(n=>!n.done),t=n.filter(n=>n.done);return`\n      ${e.length>0?`\n        <div class="task-section">\n          <h3>Pending Tasks (${e.length})</h3>\n          <ul class="tasks pending-tasks">\n            ${e.map(n=>this.renderTask(n)).join("")}\n          </ul>\n        </div>\n      `:""}\n      \n      ${t.length>0?`\n        <div class="task-section">\n          <h3>Completed Tasks (${t.length})</h3>\n          <ul class="tasks completed-tasks">\n            ${t.map(n=>this.renderTask(n)).join("")}\n          </ul>\n        </div>\n      `:""}\n    `}renderFilteredTasks(n,e){return 0===n.length?`\n        <div class="empty-state">\n          <p>No ${e} tasks found.</p>\n        </div>\n      `:`\n      <div class="task-section">\n        <h3>${{pending:"Pending Tasks",completed:"Completed Tasks",overdue:"Overdue Tasks"}[e]||"Tasks"} (${n.length})</h3>\n        <ul class="tasks">\n          ${n.map(n=>this.renderTask(n)).join("")}\n        </ul>\n      </div>\n    `}renderTask(n){const e=n.toJSON();return`\n      <li class="task-item ${n.done?"completed":""}" data-task-id="${n.id}">\n        <div class="task-checkbox">\n          <input type="checkbox" \n                 id="task-${n.id}" \n                 ${n.done?"checked":""} \n                 data-task-id="${n.id}">\n          <label for="task-${n.id}"></label>\n        </div>\n        <div class="task-content">\n          <h4 class="task-title">${n.title}</h4>\n          <div class="task-meta">\n            ${e.due?`<span class="task-due">Due: ${w(new Date(e.due))}</span>`:""}\n            <span class="task-priority priority-${n.priority}">${n.priority}</span>\n          </div>\n          ${n.notes.length>0?`\n            <div class="task-notes">\n              <p>${n.notes[n.notes.length-1]}</p>\n            </div>\n          `:""}\n        </div>\n        <div class="task-actions">\n          <button class="btn btn-sm btn-secondary" data-task-id="${n.id}" data-action="edit">Edit</button>\n          <button class="btn btn-sm btn-danger" data-task-id="${n.id}" data-action="delete">Delete</button>\n        </div>\n      </li>\n    `}attachEventListeners(){this.attachFilterEventListeners(),this.attachTaskEventListeners()}attachFilterEventListeners(){const n=document.getElementById("task-filter"),e=document.getElementById("task-sort");n&&n.addEventListener("change",n=>{this.appState.setTaskFilter(n.target.value),this.rerender()}),e&&e.addEventListener("change",n=>{this.appState.setTaskSort(n.target.value),this.rerender()})}attachTaskEventListeners(){document.querySelectorAll('.task-checkbox input[type="checkbox"]').forEach(n=>{n.addEventListener("change",n=>{const e=n.target.getAttribute("data-task-id");this.toggleTaskCompletion(e)})}),document.querySelectorAll(".task-actions button").forEach(n=>{n.addEventListener("click",n=>{const e=n.target.getAttribute("data-task-id"),t=n.target.getAttribute("data-action");"edit"===t?this.editTask(e):"delete"===t&&this.deleteTask(e)})})}toggleTaskCompletion(n){const e=this.appState.getSelectedProject();if(!e)return;const t=e.tasks.find(e=>e.id===n);t&&(t.toggleDone(),this.appState.projectService.saveProjects(this.appState.getProjects()),this.rerender())}editTask(n){const e=this.appState.getSelectedProject();if(!e)return;const t=e.tasks.find(e=>e.id===n);t&&(this.editTaskModal&&this.editTaskModal.close(),this.editTaskModal=new B(this.appState,this.rerender),this.editTaskModal.show(t))}deleteTask(n){if(confirm("Are you sure you want to delete this task?")){const e=this.appState.getSelectedProject();e&&(this.appState.removeTaskFromProject(e.id,n),this.rerender())}}}var H=t(395),R={};R.styleTagTransform=m(),R.setAttributes=l(),R.insert=d().bind(null,"head"),R.domAPI=s(),R.insertStyleElement=u(),a()(H.A,R),H.A&&H.A.locals&&H.A.locals;class U{constructor(n,e){this.appState=n,this.rerender=e}render(){return'\n      <div class="add-task-form">\n        <form id="add-task-form">\n          <div class="form-row">\n            <div class="form-group">\n              <label for="task-title">Task Title*</label>\n              <input type="text" id="task-title" name="title" required placeholder="Enter task title">\n            </div>\n            <div class="form-group">\n              <label for="task-due">Due Date</label>\n              <input type="date" id="task-due" name="due">\n            </div>\n          </div>\n          \n          <div class="form-row">\n            <div class="form-group">\n              <label for="task-priority">Priority</label>\n              <select id="task-priority" name="priority">\n                <option value="low">Low</option>\n                <option value="normal" selected>Normal</option>\n                <option value="high">High</option>\n              </select>\n            </div>\n            <div class="form-group">\n              <label for="task-notes">Notes (optional)</label>\n              <input type="text" id="task-notes" name="notes" placeholder="Add a note">\n            </div>\n          </div>\n\n          <div class="form-actions">\n            <button type="submit" class="btn btn-primary">Add Task</button>\n            <button type="button" class="btn btn-secondary" id="clear-form">Clear</button>\n          </div>\n        </form>\n      </div>\n    '}attachEventListeners(){const n=document.getElementById("add-task-form"),e=document.getElementById("clear-form");n&&n.addEventListener("submit",n=>{n.preventDefault(),this.handleSubmit(n)}),e&&e.addEventListener("click",()=>{this.clearForm()})}handleSubmit(n){const e=new FormData(n.target),t={title:e.get("title").trim(),due:e.get("due")||null,priority:e.get("priority"),notes:e.get("notes")?[e.get("notes").trim()]:[]};if(t.title)try{const n=this.appState.getSelectedProject();if(!n)return void alert("No project selected");const e=new S(t);this.appState.addTaskToProject(n.id,e),this.clearForm(),this.rerender(),this.showSuccessMessage("Task added successfully!")}catch(n){console.error("Error adding task:",n),alert("Error adding task: "+n.message)}else alert("Task title is required")}clearForm(){const n=document.getElementById("add-task-form");if(n){n.reset();const e=document.getElementById("task-priority");e&&(e.value="normal")}}showSuccessMessage(n){const e=document.createElement("div");e.className="success-message",e.textContent=n;const t=document.querySelector(".add-task-form");t&&(t.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},3e3))}}var V=t(293),W={};W.styleTagTransform=m(),W.setAttributes=l(),W.insert=d().bind(null,"head"),W.domAPI=s(),W.insertStyleElement=u(),a()(V.A,W),V.A&&V.A.locals&&V.A.locals;class G{constructor(n,e){this.appState=n,this.rerender=e,this.currentProject=null}show(n){n&&(this.currentProject=n,this.render(),this.attachEventListeners())}hide(){const n=document.getElementById("edit-project-modal");n&&n.remove()}close(){this.hide()}render(){this.hide();const n=`\n      <div id="edit-project-modal" class="modal-overlay">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h2>Edit Project</h2>\n            <button class="modal-close" id="close-edit-project-modal">&times;</button>\n          </div>\n          \n          <form id="edit-project-form">\n            <div class="form-group">\n              <label for="edit-project-name">Project Name*</label>\n              <input type="text" id="edit-project-name" name="name" required value="${this.currentProject.name}">\n            </div>\n            \n            <div class="form-group">\n              <label for="edit-project-description">Description</label>\n              <textarea id="edit-project-description" name="description" rows="3" placeholder="Enter project description">${this.currentProject.description}</textarea>\n            </div>\n\n            <div class="modal-actions">\n              <button type="submit" class="btn btn-primary">Save Changes</button>\n              <button type="button" class="btn btn-secondary" id="cancel-edit-project">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    `;document.body.insertAdjacentHTML("beforeend",n)}attachEventListeners(){const n=document.getElementById("edit-project-modal"),e=document.getElementById("edit-project-form"),t=document.getElementById("close-edit-project-modal"),r=document.getElementById("cancel-edit-project");n&&n.addEventListener("click",e=>{e.target===n&&this.hide()}),t&&t.addEventListener("click",()=>this.hide()),r&&r.addEventListener("click",()=>this.hide()),e&&e.addEventListener("submit",n=>{n.preventDefault(),this.handleSubmit(n)}),document.addEventListener("keydown",n=>{"Escape"===n.key&&this.hide()})}handleSubmit(n){const e=new FormData(n.target);try{if(this.currentProject.name=e.get("name").trim(),this.currentProject.description=e.get("description").trim()||"No description provided",!this.currentProject.name)return void alert("Project name is required");this.appState.projectService.saveProjects(this.appState.getProjects()),this.hide(),this.rerender(),this.showSuccessMessage("Project updated successfully!")}catch(n){console.error("Error updating project:",n),alert("Error updating project: "+n.message)}}showSuccessMessage(n){const e=document.createElement("div");e.className="floating-success-message",e.textContent=n,document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},3e3)}}class Y{constructor(n,e,t){this.appState=n,this.rerender=e,this.navigate=t,this.header=new L(t),this.taskList=new J(n,e),this.addTaskForm=new U(n,e),this.editProjectModal=null}render(){const n=this.appState.getSelectedProject();return n?`\n      ${this.header.render()}\n      <main class="container">\n        <div class="project-header">\n          <div class="project-info">\n            <h1>${n.name}</h1>\n            <p class="project-description">${n.description}</p>\n            <div class="project-stats">\n              <span class="stat">\n                <strong>${n.tasks.length}</strong> total tasks\n              </span>\n              <span class="stat">\n                <strong>${n.tasks.filter(n=>n.done).length}</strong> completed\n              </span>\n              <span class="stat">\n                <strong>${n.tasks.filter(n=>!n.done).length}</strong> remaining\n              </span>\n            </div>\n          </div>\n          <div class="project-actions">\n            <button class="btn btn-secondary" id="back-to-dashboard">Back to Dashboard</button>\n            <button class="btn btn-primary" id="edit-project">Edit Project</button>\n          </div>\n        </div>\n\n        <div class="project-content">\n          <div class="add-task-section">\n            <h2>Add New Task</h2>\n            ${this.addTaskForm.render()}\n          </div>\n\n          <div class="tasks-section">\n            <h2>Tasks</h2>\n            ${this.taskList.render()}\n          </div>\n        </div>\n      </main>\n    `:`\n        ${this.header.render()}\n        <main class="container">\n          <div class="project-not-found">\n            <h1>Project Not Found</h1>\n            <p>The selected project could not be found.</p>\n            <button class="btn btn-primary" id="back-to-dashboard">Back to Dashboard</button>\n          </div>\n        </main>\n      `}attachEventListeners(){this.header.attachEventListeners(),this.appState.getSelectedProject()&&(this.taskList.attachEventListeners(),this.addTaskForm.attachEventListeners()),this.attachProjectEventListeners()}attachProjectEventListeners(){const n=document.getElementById("back-to-dashboard");n&&n.addEventListener("click",()=>{this.navigate("dashboard")});const e=document.getElementById("edit-project");e&&e.addEventListener("click",()=>{const n=this.appState.getSelectedProject();n&&(this.editProjectModal&&this.editProjectModal.close(),this.editProjectModal=new G(this.appState,this.rerender),this.editProjectModal.show(n))})}}var _=t(745),K={};K.styleTagTransform=m(),K.setAttributes=l(),K.insert=d().bind(null,"head"),K.domAPI=s(),K.insertStyleElement=u(),a()(_.A,K),_.A&&_.A.locals&&_.A.locals;class Q{constructor(n,e,t){this.appState=n,this.rerender=e,this.navigate=t}render(){return'\n      <div class="add-project-form">\n        <h2>Create New Project</h2>\n        <form id="add-project-form">\n          <div class="form-group">\n            <label for="project-name">Project Name*</label>\n            <input type="text" id="project-name" name="name" required placeholder="Enter project name">\n          </div>\n          \n          <div class="form-group">\n            <label for="project-description">Description</label>\n            <textarea id="project-description" name="description" rows="3" placeholder="Enter project description (optional)"></textarea>\n          </div>\n\n          <div class="form-actions">\n            <button type="submit" class="btn btn-primary">Create Project</button>\n            <button type="button" class="btn btn-secondary" id="cancel-project">Cancel</button>\n          </div>\n        </form>\n      </div>\n    '}attachEventListeners(){const n=document.getElementById("add-project-form"),e=document.getElementById("cancel-project");n&&n.addEventListener("submit",n=>{n.preventDefault(),this.handleSubmit(n)}),e&&e.addEventListener("click",()=>{this.navigate("dashboard")})}handleSubmit(n){const e=new FormData(n.target),t={name:e.get("name").trim(),description:e.get("description").trim()||"No description provided"};if(t.name)try{const n=new T(t);this.appState.addProject(n),this.appState.selectProject(n.id),this.showSuccessMessage("Project created successfully!"),setTimeout(()=>{this.navigate("project")},1e3)}catch(n){console.error("Error creating project:",n),alert("Error creating project: "+n.message)}else alert("Project name is required")}showSuccessMessage(n){const e=document.createElement("div");e.className="success-message",e.textContent=n;const t=document.querySelector(".add-project-form");t&&(t.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},3e3))}}class X{constructor(n,e,t){this.appState=n,this.rerender=e,this.navigate=t,this.header=new L(t),this.addProjectForm=new Q(n,e,t)}render(){return`\n      ${this.header.render()}\n      <main class="container">\n        ${this.addProjectForm.render()}\n      </main>\n    `}attachEventListeners(){this.header.attachEventListeners(),this.addProjectForm.attachEventListeners()}}const Z=class{constructor(){this.appState=new A,this.currentView=null,this.currentRoute="dashboard",this.appElement=document.querySelector("#app"),this.init()}init(){this.appState.initialize(),this.render()}navigate(n){this.currentRoute=n,this.render()}render(){let n;switch(this.currentRoute){case"project":n=new Y(this.appState,this.render.bind(this),this.navigate.bind(this));break;case"add-project":n=new X(this.appState,this.render.bind(this),this.navigate.bind(this));break;default:n=new C(this.appState,this.render.bind(this),this.navigate.bind(this))}this.currentView=n,this.appElement.innerHTML=this.currentView.render(),this.currentView.attachEventListeners()}};document.addEventListener("DOMContentLoaded",()=>{new Z})})();